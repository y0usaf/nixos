###############################################################################
# System Nix Formatting Service
# Automatic system-level Nix file formatting with alejandra
###############################################################################
{
  config,
  pkgs,
  lib,
  ...
}: let
  cfg = config.cfg.system.services.formatNix;
in {
  ###########################################################################
  # Module Options
  ###########################################################################
  options.cfg.system.services.formatNix = {
    enable = lib.mkEnableOption "automatic system-level Nix file formatting with alejandra";

    directory = lib.mkOption {
      type = lib.types.str;
      default = "/etc/nixos";
      description = "Directory to watch for Nix file changes";
    };
  };

  ###########################################################################
  # Module Configuration
  ###########################################################################
  config = lib.mkIf cfg.enable {
    ###########################################################################
    # System Service Configuration
    ###########################################################################
    systemd.services.format-nix = {
      description = "Format Nix files on change";
      serviceConfig = {
        Type = "oneshot";
        ExecStart = "${pkgs.alejandra}/bin/alejandra ${cfg.directory}";
        User = "root";
      };
    };

    systemd.timers.format-nix = {
      description = "Timer for formatting Nix files";
      timerConfig = {
        OnBootSec = "1min";
        OnUnitActiveSec = "5min";
        Unit = "format-nix.service";
      };
      wantedBy = ["timers.target"];
    };
  };
}