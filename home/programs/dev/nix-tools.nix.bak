###############################################################################
# Nix Development Tools
# Linting and analysis tools for Nix code
# - statix: Nix linter for best practices
# - deadnix: Dead code elimination for Nix
###############################################################################
{
  config,
  pkgs,
  lib,
  ...
}: let
  cfg = config.cfg.home.programs.dev.nixTools;
  inherit (config.cfg.shared) username;
in {
  ###########################################################################
  # Module Options
  ###########################################################################
  options.cfg.home.programs.dev.nixTools = {
    enable = lib.mkOption {
      type = lib.types.bool;
      default = false;
      description = "Enable Nix development tools (statix, deadnix)";
    };
  };

  ###########################################################################
  # Module Configuration
  ###########################################################################
  config = lib.mkIf cfg.enable {
    ###########################################################################
    # Maid Configuration
    ###########################################################################
    users.users.${username}.maid = {
      packages = with pkgs; [
        statix  # Nix linter for best practices
        deadnix # Dead code elimination for Nix
      ];
    };
  };
}